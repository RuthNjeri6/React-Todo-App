{"ast":null,"code":"var _jsxFileName = \"/home/r/work/competence/react/todolist/src/components/Form.js\";\nimport React, { useState } from \"react\";\nexport default function Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    if (name === 0) {\n      alert(\"input filed must not be empty\");\n    } // setName(e.target.value);\n\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (e.target.value.length === 0) {\n      alert(\"input filed must not be empty\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"label-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"new-todo-input\",\n    className: \"label__lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"What needs to be done?\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"new-todo-input\",\n    className: \"input input__lg\",\n    name: \"text\",\n    autoComplete: \"off\",\n    value: name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn__primary btn__lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Add\"));\n}","map":{"version":3,"sources":["/home/r/work/competence/react/todolist/src/components/Form.js"],"names":["React","useState","Form","props","name","setName","handleChange","e","alert","handleSubmit","preventDefault","target","value","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASK,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,QAAIH,IAAI,KAAK,CAAb,EAAgB;AACdI,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACD,KAHsB,CAIvB;;AACD;;AAED,WAASC,YAAT,CAAsBF,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACG,cAAF;;AACA,QAAIH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AAC/BL,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACD;AACF;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAgC,IAAA,SAAS,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,eAME;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,gBAFL;AAGE,IAAA,SAAS,EAAC,iBAHZ;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,YAAY,EAAC,KALf;AAME,IAAA,KAAK,EAAEL,IANT;AAOE,IAAA,QAAQ,EAAEE,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAfF,CADF;AAqBD","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    if (name === 0) {\n      alert(\"input filed must not be empty\");\n    }\n    // setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (e.target.value.length === 0) {\n      alert(\"input filed must not be empty\");\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}