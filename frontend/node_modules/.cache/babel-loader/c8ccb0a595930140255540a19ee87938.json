{"ast":null,"code":"var _jsxFileName = \"/home/r/work/competence/react/todolist/src/components/Todo.js\";\nimport React, { useState, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\"; // const Task = (task, index, moveTask) => {\n//   const ref = useRef(null);\n//   const [, drop] = useDrop({\n//     accept: type,\n//     hover(item) {\n//       if (!ref.current) {\n//         return;\n//       }\n//       const dragIndex = item.index;\n//       const hoverIndex = index;\n//       if (dragIndex === hoverIndex) {\n//         return;\n//       }\n//       moveTask(dragIndex, hoverIndex);\n//       item.index = hoverIndex;\n//     },\n//   });\n//   const [{ isDragging }, drag] = useDrag({\n//     item: { type, id: task.id, index },\n//     collect: (monitor) => ({\n//       isDragging: monitor.isDraging(),\n//     }),\n//   });\n//   drag(drop(ref));\n// };\n\nexport default function Todo(props) {\n  const type = \"List\";\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const ref = useRef(null);\n  const [, drop] = useDrop({\n    accept: type,\n\n    hover(item) {\n      console.log(props.index);\n\n      if (!ref.current) {\n        return;\n      }\n\n      const dragIndex = item.index;\n      const hoverIndex = props.index;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      props.moveTask(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    }\n\n  });\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type,\n      id: props.task.id,\n      index: props.index\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  drag(drop(ref));\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = /*#__PURE__*/React.createElement(\"form\", {\n    className: \"stack-small\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"New name for \", props.name), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    className: \"todo-text\",\n    type: \"text\",\n    value: newName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn todo-cancel\",\n    onClick: () => setEditing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Cancel\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"renaming \", props.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn__primary todo-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Save\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"new name for \", props.name))));\n  const viewTemplate = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-cb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: \"checkbox\",\n    defaultChecked: props.completed,\n    onChange: () => props.toggleTaskCompleted(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, props.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn\",\n    onClick: () => setEditing(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 16\n    }\n  }, props.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn__danger\",\n    onClick: () => props.deleteTask(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Delete \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 18\n    }\n  }, props.name))));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"todo border\",\n    ref: ref,\n    style: {\n      opacity: isDragging ? 0 : 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, isEditing ? editingTemplate : viewTemplate);\n}","map":{"version":3,"sources":["/home/r/work/competence/react/todolist/src/components/Todo.js"],"names":["React","useState","useRef","useDrag","useDrop","Todo","props","type","isEditing","setEditing","newName","setNewName","ref","drop","accept","hover","item","console","log","index","current","dragIndex","hoverIndex","moveTask","isDragging","drag","id","task","collect","monitor","handleChange","e","target","value","handleSubmit","preventDefault","editTask","editingTemplate","name","viewTemplate","completed","toggleTaskCompleted","deleteTask","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\n\n// const Task = (task, index, moveTask) => {\n//   const ref = useRef(null);\n\n//   const [, drop] = useDrop({\n//     accept: type,\n//     hover(item) {\n//       if (!ref.current) {\n//         return;\n//       }\n//       const dragIndex = item.index;\n//       const hoverIndex = index;\n//       if (dragIndex === hoverIndex) {\n//         return;\n//       }\n//       moveTask(dragIndex, hoverIndex);\n//       item.index = hoverIndex;\n//     },\n//   });\n//   const [{ isDragging }, drag] = useDrag({\n//     item: { type, id: task.id, index },\n//     collect: (monitor) => ({\n//       isDragging: monitor.isDraging(),\n//     }),\n//   });\n\n//   drag(drop(ref));\n// };\n\nexport default function Todo(props) {\n  const type = \"List\";\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  const ref = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: type,\n    hover(item) {\n      console.log(props.index);\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = props.index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      props.moveTask(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type, id: props.task.id, index: props.index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  drag(drop(ref));\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <li\n      className=\"todo border\"\n      ref={ref}\n      style={{ opacity: isDragging ? 0 : 1 }}\n    >\n      {isEditing ? editingTemplate : viewTemplate}\n    </li>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}